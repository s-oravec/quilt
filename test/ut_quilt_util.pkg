CREATE OR REPLACE PACKAGE ut_quilt_util AS

    Description CONSTANT pete_types.typ_description := 'quilt_Util';

    PROCEDURE fstrNoPlaceholdersInStr(D VARCHAR2 := 'does not change string if there are no placeholders in it');
    PROCEDURE fstrReplacePlaceholders1(D VARCHAR2 := 'replaces all occurences of placeholder');
    PROCEDURE fstrReplacePlaceholders2(D VARCHAR2 := 'replaces all occurences of placeholder');
    PROCEDURE fstrAppendValueIfNoPlacehldr(D VARCHAR2 := 'appends value if no placeholder found');
    PROCEDURE fstr10Placeholders(D VARCHAR2 := 'supports 10 placeholders');

END;
/
CREATE OR REPLACE PACKAGE BODY ut_quilt_util AS

    ----------------------------------------------------------------------------
    PROCEDURE fstrNoPlaceholdersInStr(D VARCHAR2) IS
    BEGIN
        pete.set_method_description(D);
        pete_assert.eq('foo', quilt_util.formatString('foo'));
    END;

    ----------------------------------------------------------------------------
    PROCEDURE fstrReplacePlaceholders1(D VARCHAR2) IS
    BEGIN
        pete.set_method_description(D);
        pete_assert.eq('foo foo', quilt_util.formatString('$1 $1', 'foo'));
    END;

    ----------------------------------------------------------------------------
    PROCEDURE fstrReplacePlaceholders2(D VARCHAR2) IS
    BEGIN
        pete.set_method_description(D);
        pete_assert.eq('foo bar foo', quilt_util.formatString('$1 $2 $1', 'foo', 'bar'));
    END;

    ----------------------------------------------------------------------------
    PROCEDURE fstrAppendValueIfNoPlacehldr(D VARCHAR2 ) is
    BEGIN
        pete.set_method_description(D);
        -- NoFormat Start
        pete_assert.eq('foo bar foo baz',
                       quilt_util.formatString('$1 $2 $1',
                                               'foo', 'bar','baz'));
        -- NoFormat End
    END;


    ----------------------------------------------------------------------------
    PROCEDURE fstr10Placeholders(D VARCHAR2) IS
    BEGIN
        pete.set_method_description(D);
        -- NoFormat Start
        pete_assert.eq('aoo boo coo doo eoo foo goo hoo ioo joo',
                       quilt_util.formatString('$1 $2 $3 $4 $5 $6 $7 $8 $9 $10',
                                               'aoo','boo','coo','doo','eoo','foo','goo','hoo','ioo','joo'));
        -- NoFormat End
    END;

END;
/
